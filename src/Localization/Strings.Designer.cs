//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappr.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Wrappr.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Wrappr.
        /// </summary>
        public static string AboutAppButtonToolTip {
            get {
                return ResourceManager.GetString("AboutAppButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrappr is a desktop application that allows you to quickly and easily enable/disable Windows services and track their status..
        /// </summary>
        public static string AboutDescriptionText {
            get {
                return ResourceManager.GetString("AboutDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Wrappr.
        /// </summary>
        public static string AboutWindowTitle {
            get {
                return ResourceManager.GetString("AboutWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrappr.
        /// </summary>
        public static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Wrappr.
        /// </summary>
        public static string CloseAppButtonToolTip {
            get {
                return ResourceManager.GetString("CloseAppButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string CloseMessageDrawerButtonText {
            get {
                return ResourceManager.GetString("CloseMessageDrawerButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close window.
        /// </summary>
        public static string CloseWindowButtonToolTip {
            get {
                return ResourceManager.GetString("CloseWindowButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Wrappr.
        /// </summary>
        public static string ContextMenuCloseApp {
            get {
                return ResourceManager.GetString("ContextMenuCloseApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Wrappr.
        /// </summary>
        public static string ContextMenuOpenApp {
            get {
                return ResourceManager.GetString("ContextMenuOpenApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create wrapper.
        /// </summary>
        public static string CreateWrapperButtonText {
            get {
                return ResourceManager.GetString("CreateWrapperButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete wrapper.
        /// </summary>
        public static string DeleteWrapperButtonToolTip {
            get {
                return ResourceManager.GetString("DeleteWrapperButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Wrapper.
        /// </summary>
        public static string EmptyWrapperDisplayName {
            get {
                return ResourceManager.GetString("EmptyWrapperDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service set up.
        /// </summary>
        public static string EmptyWrapperServiceName {
            get {
                return ResourceManager.GetString("EmptyWrapperServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To create new wrapper click button below.
        /// </summary>
        public static string EmptyWrappersListPlaceholder {
            get {
                return ResourceManager.GetString("EmptyWrappersListPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ErrorMessageTitle {
            get {
                return ResourceManager.GetString("ErrorMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize window.
        /// </summary>
        public static string MinimizeWindowButtonToolTip {
            get {
                return ResourceManager.GetString("MinimizeWindowButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service with that name was not found.
        /// </summary>
        public static string ServiceNotFoundMessage {
            get {
                return ResourceManager.GetString("ServiceNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter service name....
        /// </summary>
        public static string ServicePickerPlaceholder {
            get {
                return ResourceManager.GetString("ServicePickerPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status of service &apos;{0}&apos; was externally changed to &apos;{1}&apos;.
        /// </summary>
        public static string ServiceStatusWasChangedBalloonText {
            get {
                return ResourceManager.GetString("ServiceStatusWasChangedBalloonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service status was changed.
        /// </summary>
        public static string ServiceStatusWasChangedBalloonTitle {
            get {
                return ResourceManager.GetString("ServiceStatusWasChangedBalloonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update wrapper.
        /// </summary>
        public static string UpdateWrapperButtonToolTip {
            get {
                return ResourceManager.GetString("UpdateWrapperButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service not found.
        /// </summary>
        public static string WrapperForNotFoundService {
            get {
                return ResourceManager.GetString("WrapperForNotFoundService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify.
        /// </summary>
        public static string WrapperNotificationsToggleText {
            get {
                return ResourceManager.GetString("WrapperNotificationsToggleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables/disables notifications for this wrapper. If enabled, Wrappr will send notification every time when status of wrapped service will be changed outside of Wrappr..
        /// </summary>
        public static string WrapperNotificationsToggleToolTip {
            get {
                return ResourceManager.GetString("WrapperNotificationsToggleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pooling delay.
        /// </summary>
        public static string WrapperPoolingDelayHint {
            get {
                return ResourceManager.GetString("WrapperPoolingDelayHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the time between service status checks (in ms). A lower value may put a strain on your system..
        /// </summary>
        public static string WrapperPoolingDelayToolTip {
            get {
                return ResourceManager.GetString("WrapperPoolingDelayToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start/stop service.
        /// </summary>
        public static string WrapperToggleToolTip {
            get {
                return ResourceManager.GetString("WrapperToggleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracking.
        /// </summary>
        public static string WrapperTrackingToggleText {
            get {
                return ResourceManager.GetString("WrapperTrackingToggleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables/disables tracking for this wrapper. If enabled, Wrappr will keep track of the service status if it will be changed outside of Wrappr..
        /// </summary>
        public static string WrapperTrackingToggleToolTip {
            get {
                return ResourceManager.GetString("WrapperTrackingToggleToolTip", resourceCulture);
            }
        }
    }
}
