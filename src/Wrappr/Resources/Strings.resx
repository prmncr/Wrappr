<?xml version="1.0" encoding="utf-8"?>
<root>
    <!--
      Microsoft ResX Schema

      Version 2.0

      The primary goals of this format is to allow a simple XML format
      that is mostly human readable. The generation and parsing of the
      various data types are done through the TypeConverter classes
      associated with the data types.

      Example:

      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>

      There are any number of "resheader" rows that contain simple
      name/value pairs.

      Each data row contains a name, and value. The row also contains a
      type or mimetype. Type corresponds to a .NET class that support
      text/value conversion through the TypeConverter architecture.
      Classes that don't support this are serialized and stored with the
      mimetype set.

      The mimetype is used for serialized objects, and tells the
      ResXResourceReader how to depersist the object. This is currently not
      extensible. For a given mimetype the value must be set accordingly:

      Note - application/x-microsoft.net.object.binary.base64 is the format
      that the ResXResourceWriter will generate, however the reader can
      read any of the formats listed below.

      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root" xmlns="">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="ContextMenuOpenApp" xml:space="preserve">
    <value>Open Wrappr</value>
  </data>
    <data name="ContextMenuCloseApp" xml:space="preserve">
    <value>Exit Wrappr</value>
  </data>
    <data name="AppName" xml:space="preserve">
    <value>Wrappr</value>
  </data>
    <data name="DeleteWrapperButtonToolTip" xml:space="preserve">
    <value>Delete wrapper</value>
  </data>
    <data name="EmptyWrappersListPlaceholder" xml:space="preserve">
    <value>To create new wrapper click button below</value>
  </data>
    <data name="CreateWrapperButtonText" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="EmptyWrapperDisplayName" xml:space="preserve">
    <value>Empty Wrapper</value>
  </data>
    <data name="EmptyWrapperServiceName" xml:space="preserve">
    <value>No service set up</value>
  </data>
    <data name="ServiceNotFoundMessage" xml:space="preserve">
    <value>Service with that name was not found</value>
  </data>
    <data name="ErrorMessageTitle" xml:space="preserve">
    <value>Error</value>
  </data>
    <data name="AboutWindowTitle" xml:space="preserve">
    <value>About Wrappr</value>
  </data>
    <data name="AboutDescriptionText" xml:space="preserve">
    <value>Wrappr is a desktop application that allows you to quickly and easily enable/disable Windows services and track their status.</value>
  </data>
    <data name="AboutAppButtonToolTip" xml:space="preserve">
    <value>About Wrappr</value>
  </data>
    <data name="ServiceStatusWasChangedBalloonTitle" xml:space="preserve">
    <value>Service status was changed</value>
  </data>
    <data name="ServiceStatusWasChangedBalloonText" xml:space="preserve">
    <value>Status of service '{0}' was externally changed to '{1}'</value>
  </data>
    <data name="WrapperTrackingToggleText" xml:space="preserve">
    <value>Tracking</value>
  </data>
    <data name="WrapperTrackingToggleToolTip" xml:space="preserve">
    <value>Enables/disables tracking for this wrapper. If enabled, Wrappr will keep track of the service status if it will be changed outside of Wrappr.</value>
  </data>
    <data name="WrapperPoolingDelayHint" xml:space="preserve">
    <value>Pooling delay</value>
  </data>
    <data name="WrapperPoolingDelayToolTip" xml:space="preserve">
    <value>Set the time between service status checks (in ms). A lower value may put a strain on your system.</value>
  </data>
    <data name="WrapperNotificationsToggleText" xml:space="preserve">
    <value>Notify</value>
  </data>
    <data name="WrapperNotificationsToggleToolTip" xml:space="preserve">
    <value>Enables/disables notifications for this wrapper. If enabled, Wrappr will send notification every time when status of wrapped service will be changed outside of Wrappr.</value>
  </data>
    <data name="NoServiceFoundPlaceholder" xml:space="preserve">
    <value>No service found</value>
  </data>
    <data name="WrappersTitle" xml:space="preserve">
    <value>Wrappers</value>
  </data>
    <data name="CreateNewWrapperTitle" xml:space="preserve">
    <value>Create a new wrapper</value>
  </data>
    <data name="WrapperSearchPlaceholder" xml:space="preserve">
    <value>Start typing service name...</value>
  </data>
    <data name="WrappersPageTitle" xml:space="preserve">
      <value>Wrappers</value>
    </data>
    <data name="CreateWrapperPageRedirectButtonText" xml:space="preserve">
    <value>Create...</value>
  </data>
    <data name="ReloadAppButtonText" xml:space="preserve">
    <value>Reload</value>
  </data>
    <data name="ReadOnlyModeDescription" xml:space="preserve">
    <value>This means that Wrappr cannot enable and disable services, change autostart settings, but can watch services statuses. To use full Wrappr functionality, please restart it with elevated privileges.</value>
  </data>
    <data name="ReadOnlyModeTitle" xml:space="preserve">
    <value>Wrappr is currently running without administrator privileges.</value>
  </data>
    <data name="ElevatedTitlebarText" xml:space="preserve">
    <value>Administator</value>
  </data>
    <data name="NotElevatedTipTitlebarText" xml:space="preserve">
    <value>Read-only</value>
  </data>
    <data name="NoWrappersPopupPlaceholder" xml:space="preserve">
    <value>Nothing to show</value>
  </data>
    <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
    <data name="AddTaskToSchedulerTitle" xml:space="preserve">
    <value>Launch Wrappr on login</value>
  </data>
    <data name="AddTaskToSchedulerSubtitle" xml:space="preserve">
    <value>Please, move Wrappr.exe to safe place before using this feature to prevent accidental deletion.</value>
  </data>
    <data name="AddedToAutoStartTitle" xml:space="preserve">
    <value>Added to autostart successfully!</value>
  </data>
    <data name="AutostartDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
    <data name="ShowAtStart" xml:space="preserve">
    <value>Show at log in</value>
  </data>
    <data name="HideAtStart" xml:space="preserve">
    <value>Open in tray at log in</value>
  </data>
    <data name="AppVersion" xml:space="preserve">
    <value>2.0</value>
  </data>
    <data name="SourcesPrefix" xml:space="preserve">
    <value>Source code:</value>
  </data>
    <data name="CheckUpdates" xml:space="preserve">
    <value>check updates:</value>
  </data>
    <data name="LogoCreditsPrefix" xml:space="preserve">
    <value>App logo was made using</value>
  </data>
    <data name="LogoCreditsLink" xml:space="preserve">
    <value>resources by Gregor Cresnar Premium from Flaticon</value>
  </data>
    <data name="NoServiceSelectedError" xml:space="preserve">
      <value>No service was selected</value>
    </data>
    <data name="WrapperGroupsPageTitle" xml:space="preserve">
      <value>Groups</value>
    </data>
</root>